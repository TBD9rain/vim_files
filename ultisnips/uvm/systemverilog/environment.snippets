#===================================================================================================
#
#   Target Code     :   SystemVerilog
#   Version         :   v1.0.1
#
#   Description     :   UVM based environment class
#
#   Additional info :   Get instruction with ":help UltiSnips".
#                       Use "snippet" or "sn" to trigger snippet for snippet edition.
#
#   Author          :   TBD9rain
#   Email           :
#
#===================================================================================================

snippet class "UVM Environment" b
class ${1:Env}${2: #(
	parameter type ITXN = ${3:InTxn},
	parameter type OTXN = ${4:OutTxn}
)} extends uvm_env;
	\`uvm_component`!p snip.rv='_param' if t[2] else ''`_utils($1`!p snip.rv=' #(ITXN, OTXN)' if t[2] else ''`)

	//  variable definition
	${5:InAgt}${6: #(ITXN)} i_agt;
	${7:OutAgt}${8: #(OTXN)} o_agt;
	${9:Cov}${10: #(ITXN)} cov;
	${11:Mdl}${12: #(ITXN, OTXN)} mdl;
	${13:Scb}${14: #(OTXN)} scb;

	uvm_tlm_analysis_fifo #(ITXN) iagt_cov_fifo;
	uvm_tlm_analysis_fifo #(ITXN) iagt_mdl_fifo;
	uvm_tlm_analysis_fifo #(OTXN) oagt_scb_fifo;
	uvm_tlm_fifo #(OTXN) mdl_scb_fifo;$0

	function new(string name="$1", uvm_component parent=null);
		super.new(name, parent);
	endfunction

	function void build_phase(uvm_phase phase);
		super.build_phase(phase);
		i_agt = $5$6::type_id::create("i_agt", this);
		o_agt = $7$8::type_id::create("o_agt", this);
		cov = $9$10::type_id::create("cov", this);
		mdl = $11$12::type_id::create("mdl", this);
		scb = $13$14::type_id::create("scb", this);

		uvm_config_db#(uvm_active_passive_enum)::set(this, "i_agt", "is_active", UVM_ACTIVE);${15:
		uvm_config_db#(uvm_active_passive_enum)::set(this, "o_agt", "is_active", UVM_PASSIVE);}

		iagt_mdl_fifo = new("iagt_mdl_fifo", this);
		iagt_cov_fifo = new("iagt_cov_fifo", this);
		oagt_scb_fifo = new("oagt_scb_fifo", this);
		mdl_scb_fifo = new("mdl_scb_fifo", this, 64);
	endfunction

	function void connect_phase(uvm_phase phase);
		super.connect_phase(phase);
		i_agt.ap.connect(iagt_cov_fifo.analysis_export);
		cov.imon_getp.connect(iagt_cov_fifo.blocking_get_export);
		i_agt.ap.connect(iagt_mdl_fifo.analysis_export);
		mdl.imon_getp.connect(iagt_mdl_fifo.blocking_get_export);
		o_agt.ap.connect(oagt_scb_fifo.analysis_export);
		scb.omon_getp.connect(oagt_scb_fifo.blocking_get_export);
		mdl.scb_putp.connect(mdl_scb_fifo.blocking_put_export);
		scb.mdl_getp.connect(mdl_scb_fifo.blocking_get_export);
	endfunction
endclass
endsnippet


