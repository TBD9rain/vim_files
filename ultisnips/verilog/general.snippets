#===================================================================================================
#
#   Target Code     :   Verilog
#   Version         :   v1.0.0
#
#   Description     :
#
#   Additional info :   Get instruction with ":help UltiSnips".
#                       Use "snippet" or "sn" to trigger snippet for snippet edition.
#
#   Author          :   TBD9rain
#   Email           :
# 
#===================================================================================================

snippet "//  head info" "automatic filling head info" b
//==================================================================================================
//                            COPYRIGHT NOTICE
//  Copyright 2000-2024 (c) Lattice Semiconductor Corporation
//
//  ALL RIGHTS RESERVED
//  This confidential and proprietary software may be used only as authorized by a licensing
//  agreement from Lattice Semiconductor Corporation. The entire notice above must be reproduced on
//  all authorized copies and copies may only be made to the extent permitted by a licensing
//  agreement from Lattice Semiconductor Corporation.
//
//  Lattice Semiconductor Corporation                           TEL : 1-800-Lattice (USA and Canada)
//  5555 NE Moore Court                                         408-826-6000 (other locations)
//  Hillsboro, OR 97124                                         web  : https://www.latticesemi.com
//  U.S.A                                                       email: techsupport@latticesemi.com
//==================================================================================================
//
//  Project         :   ${1}
//  Version         :   v${2:1.0.0}
//  Title           :   `!p import os; name, ext = os.path.splitext(fn); snip.rv = name`
//
//  Description     :   $0
//
//  Additional info :
//  Author          :   ${3:`!p import os; snip.rv = os.getenv('USERNAME') or os.getenv('USER');`}
//  Email           :
//
//==================================================================================================
endsnippet

snippet todo "to do message" bwA
//  TODO
//  ${0:what to do}
//  BY `!p import os; snip.rv = os.getenv('USERNAME') or os.getenv('USER');` AT `!v strftime("%Y-%m-%d %H:%M")`
endsnippet

snippet always "sequential always block" b
always @(${1|posedge,negedge|} ${2:clk} or ${3|posedge,negedge|} ${4:rst_n}) begin
	if (`!p snip.rv = '~' if t[3]=='negedge' else ''`$4) begin
		$0
	end
	else begin
	end
end
endsnippet

snippet begin "begin end block" wA
begin
	$0
end
endsnippet

snippet if "if condition" wA
if (${1:1 < 0}) $0
endsnippet

snippet case "case selection" bwA
case (${1:sel})
	$0
	default:   $2
endcase
endsnippet

snippet casex "casex selection" bwA
casex (${1:sel})
	$0
	default:   $2
endcase
endsnippet

snippet casez "casez selection" bwA
casez (${1:sel})
	$0
	default:   $2
endcase
endsnippet

snippet "parameter " "parameter definition" rbA
parameter   ${1:PARAM_NAME} = ${0:8};
endsnippet

snippet "localparam " "local parameter definition" rbA
localparam  ${1:PARAM_NAME} = ${0:8};
endsnippet

snippet "param(eter)?\?" "dynamic width parameter" rbA
parameter   ${1:DYNAMIC_WIDTH} = (${2:DATA_DEPTH} > 2) ? \$clog2($2) : 1;
endsnippet

snippet "local(param)?\?" "dynamic width localparam" rbA
localparam  ${1:DYNAMIC_WIDTH} = (${2:DATA_DEPTH} > 2) ? \$clog2($2) : 1;
endsnippet

snippet forever "forever block" bwA
forever begin
	$0
end
endsnippet

priority -1

snippet function "function definition" bA
function automatic ${1:[ 7: 0]} ${2:func_name};
${3://  varibale definition}
begin
	$0
end
endfunction
endsnippet

snippet task "task definition" bA
task automatic ${1:task_name};
${2://  varibale definition}
begin
	$0
end
endtask
endsnippet

