#===================================================================================================
#
#   Target Code : Verilog
#   Version     : 1.0.6
#
#   Description
#
#   Additional info
#       Get instruction with ":help UltiSnips".
#       Use "snippet" or "sn" to trigger snippet for snippet edition.
#
#   Author  : TBD9rain
#
#===================================================================================================

snippet fileHeader "automatic filling head info" b
//==================================================================================================
//
//  Project : ${1}
//  Title   : ${2:`!p import os; name, ext = os.path.splitext(fn); snip.rv = name`}
//  Version : 1.0.0
//
//  Description${3:
//      ${4:text}}
//
//  Additional info${5:
//      ${6:text}}${7:
//
//  Author  : ${8:`!p import os; snip.rv = os.getenv('USERNAME') or os.getenv('USER');`}${9:
//  Email   : $10}}
//
//==================================================================================================

$0

endsnippet

snippet todo "to do message" bwA
//  TODO
//  ${0:what to do}
//  BY `!p import os; snip.rv = os.getenv('USERNAME') or os.getenv('USER');` AT `!v strftime("%Y-%m-%d %H:%M")`
endsnippet

snippet always "sequential always block" b
always @(${1|posedge,negedge|} ${2:clk} or ${3|posedge,negedge|} ${4:rst_n}) begin
	if (`!p snip.rv = '~' if t[3]=='negedge' else ''`$4) begin
		$0
	end
	else begin
	end
end
endsnippet

snippet begin "begin end block" wA
begin
	$0
end
endsnippet

snippet "(?<!`)\bif\b" "if condition" rA
if (${1:1 < 0}) $0
endsnippet

snippet case "case selection" bwA
case (${1:sel})
	$0
	default:   $2
endcase
endsnippet

snippet casex "casex selection" bwA
casex (${1:sel})
	$0
	default:   $2
endcase
endsnippet

snippet casez "casez selection" bwA
casez (${1:sel})
	$0
	default:   $2
endcase
endsnippet

snippet parameter "parameter definition" bw
parameter ${1:PARAM_NAME} = ${0:8}
endsnippet

snippet localparam "local parameter definition" bw
localparam ${1:PARAM_NAME} = ${0:8}
endsnippet

snippet "param(eter)?\?" "dynamic width parameter" rbA
parameter ${1:DYNAMIC_WIDTH} = (${2:DATA_DEPTH} > 2) ? \$clog2($2) : 1$0
endsnippet

snippet "local(param)?\?" "dynamic width localparam" rbA
localparam ${1:DYNAMIC_WIDTH} = (${2:DATA_DEPTH} > 2) ? \$clog2($2) : 1$0
endsnippet

snippet forever "forever block" bwA
forever begin
	$0
end
endsnippet

snippet `def "define macro" bA
\`define ${1:MACRO_NAME} ${2:TEXT}$0
endsnippet

snippet	`ifdef "if define macro" bA
\`ifdef ${1:MACRO_NAME}
	$0
\`endif
endsnippet

snippet	`ifndef "if not define macro" bA
\`ifndef ${1:MACRO_NAME}
	$0
\`endif
endsnippet


priority -1

snippet function "function definition" bA
function automatic ${1:[ 7: 0]} ${2:func_name};
${3://  varibale definition}
begin
	$0
end
endfunction
endsnippet

snippet task "task definition" bA
task automatic ${1:task_name};
${2://  varibale definition}
begin
	$0
end
endtask
endsnippet

