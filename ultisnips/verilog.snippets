#===============================================================
# get help with ":help UltiSnips"
#
# Type "sn" or "snippet" to trigger snippet for snippet creating
#===============================================================

snippet "//  head info" "automatic filling head info" b
//==================================================================================================
//                            COPYRIGHT NOTICE
//  Copyright 2000-2024 (c) Lattice Semiconductor Corporation
//
//  ALL RIGHTS RESERVED
//  This confidential and proprietary software may be used only as authorized by a licensing
//  agreement from Lattice Semiconductor Corporation. The entire notice above must be reproduced on
//  all authorized copies and copies may only be made to the extent permitted by a licensing
//  agreement from Lattice Semiconductor Corporation.
//
//  Lattice Semiconductor Corporation                           TEL : 1-800-Lattice (USA and Canada)
//  5555 NE Moore Court                                         408-826-6000 (other locations)
//  Hillsboro, OR 97124                                         web  : https://www.latticesemi.com
//  U.S.A                                                       email: techsupport@latticesemi.com
//==================================================================================================
//
//  Project         :   ${1}
//  Version         :   v${2:1.0.0}
//  Title           :   `!p import os; name, ext = os.path.splitext(fn); snip.rv = name`
//
//  Description     :   $0
//
//  Additional info :
//  Author          :   ${3:`!p import os; snip.rv = os.getenv('USERNAME') or os.getenv('USER');`}
//  Email           :
//
//==================================================================================================
endsnippet

snippet "todo" "to do message" rbA
//  TODO
//  ${0:what to do}
//  BY `!p import os; snip.rv = os.getenv('USERNAME') or os.getenv('USER');` AT `!v strftime("%Y-%m-%d %H:%M")`
endsnippet

snippet always "sequential always block" b
always @(${1|posedge,negedge|} ${2:clk} or ${3|posedge,negedge|} ${4:rst_n}) begin
	if (`!p snip.rv = '~' if t[3]=='negedge' else ''`$4) begin
		$0
	end
	else begin
	end
end
endsnippet

snippet begin "begin end block" wA
begin
	$0
end
endsnippet

snippet function "function definition" bA
function automatic ${1:func_name};
	begin
		$0
	end
endfunction
endsnippet

snippet task "task definition" bA
task automatic ${1:task_name};
	begin
		$0
	end
endtask
endsnippet

snippet "param(eter)?" "dynamic width parameter" rb
parameter   ${1:DYNAMIC_WIDTH} = (${2:DATA_DEPTH} > 2) ? \$clog2($2) : 1;
endsnippet

snippet "local(param)?" "dynamic width parameter" rb
localparam  ${1:DYNAMIC_WIDTH} = (${2:DATA_DEPTH} > 2) ? \$clog2($2) : 1;
endsnippet

